const log=require("@vladmandic/pilogger"),fs=require("fs"),process=require("process");let fetch;const tf=require("@tensorflow/tfjs-node"),Human=require("../../dist/human.node.js");let human=null;const myConfig={modelBasePath:"file://models/",debug:!1,async:!0,filter:{enabled:!1},face:{enabled:!0,detector:{enabled:!0},mesh:{enabled:!0},iris:{enabled:!0},description:{enabled:!0},emotion:{enabled:!0}},hand:{enabled:!0},body:{enabled:!0},object:{enabled:!0}};async function detect(e){let n;if(log.info("Loading image:",e),e.startsWith("http:")||e.startsWith("https:")){fetch=(await import("node-fetch")).default;const t=await fetch(e);t&&t.ok?n=await t.buffer():log.error("Invalid image URL:",e,t.status,t.statusText,t.headers.get("content-type"))}else n=fs.readFileSync(e);if(!n)return;const t=human.tf.node.decodeImage(n,3);await human.detect(t,myConfig),human.tf.dispose(t)}async function main(){log.header(),human=new Human.Human(myConfig),human.events&&(human.events.addEventListener("warmup",(()=>{log.info("Event Warmup")})),human.events.addEventListener("load",(()=>{const e=Object.keys(human.models).filter((e=>human.models[e]));log.info("Event Loaded:",e,human.tf.engine().memory())})),human.events.addEventListener("image",(()=>{log.info("Event Image:",human.process.tensor.shape)})),human.events.addEventListener("detect",(()=>{log.data("Event Detected:");const e=human.result.persons;for(let n=0;n<e.length;n++){const t=e[n].face,a=t?`score:${t.score} age:${t.age} gender:${t.gender} iris:${t.iris}`:null,s=e[n].body,o=s?`score:${s.score} keypoints:${s.keypoints?.length}`:null;log.data(`  #${n}: Face:${a} Body:${o} LeftHand:${e[n].hands.left?"yes":"no"} RightHand:${e[n].hands.right?"yes":"no"} Gestures:${e[n].gestures.length}`)}}))),await human.tf.ready();const e=process.argv[2];e?await detect(e):log.error("Missing <input>")}main();
