const tf=require("@tensorflow/tfjs-node-gpu"),log=require("@vladmandic/pilogger"),canvasJS=require("canvas"),Human=require("../../dist/human.node-gpu.js").default,input="./samples/in/group-1.jpg",loop=20,myConfig={backend:"tensorflow",modelBasePath:"//g4lihru.me/ai/models/",debug:!0,async:!0,cacheSensitivity:0,filter:{enabled:!1},face:{enabled:!0,detector:{enabled:!0,rotation:!1},mesh:{enabled:!0},iris:{enabled:!0},description:{enabled:!0},emotion:{enabled:!0},antispoof:{enabled:!0},liveness:{enabled:!0}},hand:{enabled:!0},body:{enabled:!0},object:{enabled:!0}};async function getImage(e){const a=await canvasJS.loadImage(input),n=canvasJS.createCanvas(a.width,a.height),t=n.getContext("2d");t.drawImage(a,0,0,a.width,a.height);const o=t.getImageData(0,0,n.width,n.height),i=e.tf.tensor(Array.from(o.data),[n.height,n.width,4],"int32");return log.info("Image:",input,i.shape),i}async function main(){log.header();const e=new Human(myConfig);await e.tf.ready(),log.info("Human:",e.version),await e.load();const a=Object.keys(e.models).filter((a=>e.models[a]));log.info("Loaded:",a),log.info("Memory state:",e.tf.engine().memory());const n=await getImage(e);log.state("Processing:",n.shape);const t=e.now();await e.detect(n,myConfig);const o=e.now();log.state("Backend:",e.tf.getBackend()),log.data("Warmup:",Math.round(o-t));for(let a=0;a<20;a++)await e.detect(n,myConfig);const i=e.now();log.data("Average:",Math.round((i-o)/20))}main();
